pipeline TemperaturePipeline {

    block TemperatureExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ZipInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block TemperatureFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block TemperatureTextFileInterpreter oftype TextFileInterpreter {}

    block TemperatureCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block TemperatureColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I, column K, column L, column M, column N, column *];
    }

    block RenameCellWriter oftype CellWriter {
        at: range A1:F1;
        write: ["id", "producer", "model", "month", "temperature", "battery_temperature"];
    }
    

    block TempTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype IDType,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }
    valuetype IDType oftype integer {
        constraints: [IDConstraint];
    }

    constraint IDConstraint on integer:
        value > 0;
        
     transform TempConvertCtoF{
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }


    block CtoFTemperatureTransformer oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        use: TempConvertCtoF;
    }

    block CtoFBatteryTemperatureTransformer oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        use: TempConvertCtoF;
    }


    block TemperatureLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }

    TemperatureExtractor
        -> ZipInterpreter
        -> TemperatureFilePicker
        -> TemperatureTextFileInterpreter
        -> TemperatureCSVInterpreter
        -> TemperatureColumnDeleter
        -> RenameCellWriter
        -> TempTableInterpreter
        -> CtoFTemperatureTransformer
        -> CtoFBatteryTemperatureTransformer
        -> TemperatureLoader;

    
}